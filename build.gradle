plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

apply plugin: 'java'
//mainClassName = 'switus.user.back.studywithus.StudyWithUsApplication'
group = 'switus.user.back'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

jar {
	manifest {
		attributes 'Main-Class': 'switus.user.back.studywithus.StudyWithUsApplication'
	}
	from {
		configurations.compile.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // JWT
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'  // SQL 로그에 파라미터에 전달되는 값 확인 *운영 단계에서는 사용 고려*
	implementation 'io.springfox:springfox-swagger2:2.6.1' // Swagger API Document
	implementation 'io.springfox:springfox-swagger-ui:2.6.1' // Swagger API Document
	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1' // yaml 파일을 사용하여 다국어 처리를 하기위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.3.1.RELEASE' // 필드 Validation 체크
	implementation 'com.querydsl:querydsl-jpa' // QueryDSL
	implementation 'com.querydsl:querydsl-apt' // QueryDSL
	implementation 'org.imgscalr:imgscalr-lib:4.2' // Image Resize & Crop Library
	implementation 'commons-io:commons-io:2.6' // File I/O Utility
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Redis
	implementation 'org.springframework.boot:spring-boot-starter-mail' // SMTP
	implementation 'org.springframework:spring-messaging:5.2.8.RELEASE' // inbound message 처리를 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-websocket' // stomp
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('com.jayway.jsonpath:json-path:2.0.0') // MockMvc에서 json response 처리를 위한 라이브러리
	testImplementation 'org.mockito:mockito-core:2.7.22'
	testImplementation('pl.pragmatists:JUnitParams:1.1.1') // 파라미터를 이용한 테스트
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
}

test {
	useJUnitPlatform {
		includeEngines 'junit-vintage'
	}
}


//querydsl
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}